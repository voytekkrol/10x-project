-- ============================================================
-- Migration: Create Core Tables
-- Description: Creates generations, flashcards, and generation_error_logs tables
-- Author: Database Schema v2.0.0
-- Date: 2025-10-13
-- ============================================================
-- 
-- This migration creates the core tables for the 10x-cards flashcard application:
-- 1. generations - Tracks AI flashcard generation sessions
-- 2. flashcards - Stores flashcard content with source tracking
-- 3. generation_error_logs - Logs AI generation failures
--
-- All tables reference auth.users which is managed by Supabase Auth.
-- Foreign keys use CASCADE or SET NULL based on data retention requirements.
-- ============================================================

-- ============================================================
-- Table: generations
-- Purpose: Tracks AI flashcard generation sessions with acceptance statistics
-- ============================================================
create table generations (
  id bigserial primary key,
  user_id uuid references auth.users(id) on delete set null,
  model varchar(100) not null,
  generated_count integer not null default 0,
  generated_duration integer not null default 0,
  accepted_unedited_count integer,
  accepted_edited_count integer,
  source_text_hash varchar(64) not null,
  source_text_length integer not null,
  created_at timestamp with time zone not null default now(),
  
  -- Ensure generated_count is non-negative
  constraint generated_count_check check (generated_count >= 0),
  
  -- Ensure generated_duration (in milliseconds) is non-negative
  constraint generated_duration_check check (generated_duration >= 0),
  
  -- Acceptance counts are nullable (updated after user review) but must be non-negative when set
  constraint accepted_unedited_check check (accepted_unedited_count is null or accepted_unedited_count >= 0),
  constraint accepted_edited_check check (accepted_edited_count is null or accepted_edited_count >= 0),
  
  -- Total accepted flashcards cannot exceed generated count
  constraint acceptance_logic_check check (
    (accepted_unedited_count is null and accepted_edited_count is null) or
    (accepted_unedited_count + accepted_edited_count <= generated_count)
  ),
  
  -- Source text length must be between 1000-10000 characters (PRD requirement)
  constraint source_length_check check (source_text_length >= 1000 and source_text_length <= 10000),
  
  -- SHA256 hash format validation (64 lowercase hex characters)
  constraint hash_format_check check (source_text_hash ~ '^[a-f0-9]{64}$')
);

-- Add comment explaining the table purpose
comment on table generations is 'Tracks AI flashcard generation sessions including model used, generation statistics, and acceptance rates';
comment on column generations.user_id is 'User who initiated generation. ON DELETE SET NULL preserves statistics when users are deleted';
comment on column generations.model is 'AI model identifier used for generation (e.g., gpt-4, claude-3)';
comment on column generations.generated_count is 'Total number of flashcards generated in this session';
comment on column generations.generated_duration is 'API response time in milliseconds for performance monitoring';
comment on column generations.accepted_unedited_count is 'Flashcards accepted without modifications (nullable, updated after user review)';
comment on column generations.accepted_edited_count is 'Flashcards accepted after editing (nullable, updated after user review)';
comment on column generations.source_text_hash is 'SHA256 hash of source text for deduplication checks';
comment on column generations.source_text_length is 'Character count of source text';

-- ============================================================
-- Table: flashcards
-- Purpose: Stores flashcard content with source tracking and ownership
-- ============================================================
create table flashcards (
  id bigserial primary key,
  user_id uuid references auth.users(id) on delete cascade,
  front varchar(200) not null,
  back varchar(500) not null,
  source varchar(20) not null default 'manual',
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  generation_id bigint references generations(id) on delete set null,
  
  -- Front field must be between 1-200 characters
  constraint front_length_check check (length(front) >= 1 and length(front) <= 200),
  
  -- Back field must be between 1-500 characters
  constraint back_length_check check (length(back) >= 1 and length(back) <= 500),
  
  -- Source must be one of three valid values
  -- 'ai-full': Generated by AI and accepted without modifications
  -- 'ai-edited': Generated by AI but edited before acceptance
  -- 'manual': Created manually by user
  constraint source_value_check check (source in ('ai-full', 'ai-edited', 'manual'))
);

-- Add comments explaining the table and columns
comment on table flashcards is 'Stores flashcard content with source tracking. Character limits prevent abuse and ensure UI consistency';
comment on column flashcards.user_id is 'Owner of the flashcard. ON DELETE CASCADE removes flashcards when user is deleted';
comment on column flashcards.front is 'Question/front side of flashcard (max 200 characters)';
comment on column flashcards.back is 'Answer/back side of flashcard (max 500 characters)';
comment on column flashcards.source is 'Origin of flashcard: ai-full (AI generated, unedited), ai-edited (AI generated, edited), or manual';
comment on column flashcards.generation_id is 'Links flashcard to its AI generation session. ON DELETE SET NULL preserves flashcard when generation record is deleted';

-- ============================================================
-- Table: generation_error_logs
-- Purpose: Logs AI generation failures for debugging and monitoring
-- ============================================================
create table generation_error_logs (
  id bigserial primary key,
  user_id uuid references auth.users(id) on delete set null,
  model varchar(100) not null,
  source_text_hash varchar(64) not null,
  source_text_length integer not null,
  error_code varchar(50),
  error_message text,
  created_at timestamp with time zone not null default now(),
  
  -- SHA256 hash format validation (64 lowercase hex characters)
  constraint error_hash_format_check check (source_text_hash ~ '^[a-f0-9]{64}$'),
  
  -- Source text length must be positive
  constraint error_length_check check (source_text_length > 0)
);

-- Add comments explaining the table purpose
comment on table generation_error_logs is 'Logs AI generation failures for debugging and system monitoring. Helps identify patterns in generation failures';
comment on column generation_error_logs.user_id is 'User who experienced the error. Nullable to allow logging errors even if user context is lost. ON DELETE SET NULL preserves error logs for monitoring';
comment on column generation_error_logs.model is 'AI model that failed during generation attempt';
comment on column generation_error_logs.source_text_hash is 'SHA256 hash of source text that caused the error';
comment on column generation_error_logs.source_text_length is 'Character count of source text';
comment on column generation_error_logs.error_code is 'Error code from API response (nullable to support various error formats)';
comment on column generation_error_logs.error_message is 'Detailed error message for debugging (nullable)';

